import ch.szclsb.orbis.plugins.MathPlugin

plugins {
    id 'java'
}

group 'ch.szclsb'
version '1.0-SNAPSHOT'

apply plugin: MathPlugin

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

math {
    outputDir = layout.projectDirectory.dir("src/main/gen/ch/szclsb/orbis/math")
    apiPackage = "ch.szclsb.orbis.math"
    apiInterfaceName = "IFMatrixApi"
    vecApiInterfaceName = "IFVectorApi"
    abstractMatPackage = "ch.szclsb.orbis.math"
    abstractMatClassName = "FMatrix"
    generatedPackage = "ch.szclsb.orbis.math"
    generatedClassName = "FMatrixApi"
    matrices {
        register('FMatrix4x4') {
            type = 'float'
            rows = 4
            columns = 4
        }
        register('FMatrix10x10') {
            type = 'float'
            rows = 10
            columns = 10
        }
        register('FVector4') {
            type = 'float'
            rows = 4
            columns = 1
        }
        register('FVector3') {
            type = 'float'
            rows = 3
            columns = 1
        }
    }
}

sourceSets.main.java.srcDirs 'src/main/gen'

compileJava {
    options.compilerArgs += ['--add-modules', 'jdk.incubator.vector']
}

compileJava.dependsOn tasks.math

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileTestJava {
    options.compilerArgs += ['--add-modules', 'jdk.incubator.vector']
}

test {
    jvmArgs('--add-modules', 'jdk.incubator.vector')
    useJUnitPlatform() {
        includeTags "UnitTest"
    }
}

tasks.register("performanceTest", Test) {
    jvmArgs('--add-modules', 'jdk.incubator.vector')
    useJUnitPlatform() {
        includeTags "PerformanceTest"
    }
    mustRunAfter test
}


